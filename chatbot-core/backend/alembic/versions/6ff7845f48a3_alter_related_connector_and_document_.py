"""alter related connector and document upload schema

Revision ID: 6ff7845f48a3
Revises: a51a76136ba9
Create Date: 2025-01-13 06:53:31.832532

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision: str = "6ff7845f48a3"
down_revision: Union[str, None] = "a51a76136ba9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "document",
        sa.Column("id", mssql.UNIQUEIDENTIFIER(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("last_synced_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("is_public", sa.Boolean(), nullable=False),
        sa.Column("issue_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("is_outdated", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "document_tag",
        sa.Column("id", mssql.UNIQUEIDENTIFIER(), nullable=False),
        sa.Column("tag_key", sa.String(), nullable=False),
        sa.Column("tag_value", sa.String(), nullable=False),
        sa.Column("document_id", mssql.UNIQUEIDENTIFIER(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["document_id"], ["document.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_index("ix_document_metadata_tag_id", table_name="document_metadata_tag")
    op.drop_table("document_metadata_tag")
    op.drop_index("ix_document_metadata_id", table_name="document_metadata")
    op.drop_table("document_metadata")
    op.drop_index("ix_connector_id", table_name="connector")
    op.alter_column(
        "user",
        "email",
        existing_type=sa.VARCHAR(collation="SQL_Latin1_General_CP1_CI_AS"),
        type_=sa.String(length=255),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "user",
        "email",
        existing_type=sa.String(length=255),
        type_=sa.VARCHAR(collation="SQL_Latin1_General_CP1_CI_AS"),
        existing_nullable=False,
    )
    op.create_index("ix_connector_id", "connector", ["id"], unique=False)
    op.create_table(
        "document_metadata",
        sa.Column("id", mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
        sa.Column(
            "name",
            sa.VARCHAR(collation="SQL_Latin1_General_CP1_CI_AS"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "link",
            sa.VARCHAR(collation="SQL_Latin1_General_CP1_CI_AS"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_synced_at", mssql.DATETIMEOFFSET(), autoincrement=False, nullable=False),
        sa.Column(
            "primary_owners",
            sa.VARCHAR(collation="SQL_Latin1_General_CP1_CI_AS"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("is_public", mssql.BIT(), autoincrement=False, nullable=False),
        sa.Column("created_at", mssql.DATETIMEOFFSET(), autoincrement=False, nullable=False),
        sa.Column("updated_at", mssql.DATETIMEOFFSET(), autoincrement=False, nullable=False),
        sa.Column("deleted_at", mssql.DATETIMEOFFSET(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="PK__document__3213E83F767B8394"),
    )
    op.create_index("ix_document_metadata_id", "document_metadata", ["id"], unique=False)
    op.create_table(
        "document_metadata_tag",
        sa.Column("id", mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
        sa.Column(
            "tag_key",
            sa.VARCHAR(collation="SQL_Latin1_General_CP1_CI_AS"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "tag_value",
            sa.VARCHAR(collation="SQL_Latin1_General_CP1_CI_AS"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("created_at", mssql.DATETIMEOFFSET(), autoincrement=False, nullable=False),
        sa.Column("updated_at", mssql.DATETIMEOFFSET(), autoincrement=False, nullable=False),
        sa.Column("deleted_at", mssql.DATETIMEOFFSET(), autoincrement=False, nullable=True),
        sa.Column(
            "document_metadata_id", mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["document_metadata_id"],
            ["document_metadata.id"],
            name="FK__document_metadata_tag__document_metadata",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="PK__document__3213E83F6F5D3968"),
    )
    op.create_index("ix_document_metadata_tag_id", "document_metadata_tag", ["id"], unique=False)
    op.drop_table("document_tag")
    op.drop_table("document")
    # ### end Alembic commands ###
