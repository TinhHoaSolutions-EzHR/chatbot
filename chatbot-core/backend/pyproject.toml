[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
authors = [
  { name = "lelouvincx", email = "dinhminhchinh3357@gmail.com" },
  { name = "greyyT" },
  { name = "ImTrungLe" },
  { name = "lekiet1214" },
  { name = "TranThang0801" },
  { name = "tuantran0910" },
]
name = "backend"
version = "1.0.0"
description = "FastAPI based backend for the project EzHR Chatbot."
readme = "README.md"
requires-python = ">=3.11"
keywords = ["sample", "setuptools", "development"]

dependencies = [
  "fastapi[standard]",
  "uvicorn==0.23.2",
  "psycopg2-binary==2.9.10",
  "sqlalchemy==1.4.54",
  "llama-index>=0.12.1",
]

[project.optional-dependencies]
dev = ["check-manifest", "pyright", "ruff", "black"]
test = ["pytest", "coverage"]

[project.scripts]
main = "app:main"

[tool.semantic_release]
version_variable = "app/__init__.py:__version__"
branch = "main"
upload_to_pypi = false
changelog_file = "CHANGELOG.md"

[tool.ruff]
target-version = "py311"
line-length = 120
exclude = ["*/migrations/*", "*/alembic/*", "*/__init__.py"]
extend-exclude = ["*.ipynb"]
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["F"]
ignore = ["W", "F401", "F841"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

[tool.pyright]
typeCheckingMode = "off"

[tool.black]
line-length = 120
extend-exclude = ""

[tool.pytest.ini_options]
# Ignore specific test files or directories
# addopts = "--ignore=path/to/test_file.py --ignore=path/to/another_test_file.py"

# Enable verbose output
testpaths = ["tests"]                     # Specify directories where tests are located
python_files = ["test_*.py", "*_test.py"] # Test file pattern
python_classes = ["Test*"]                # Class names to consider as tests
python_functions = ["test_*"]             # Function names to consider as tests

[dependency-groups]
dev = ["pytest-coverage>=0.0", "pytest>=8.3.3"]
