"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1955],{58395:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>j,frontMatter:()=>c,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"localDevelopmentGuide/namingConvention","title":"Naming Conventions","description":"A well-defined Git naming convention enhances collaboration, supports automated versioning, and simplifies project maintenance. This document outlines recommended naming conventions for branches, commits, and tags to facilitate a smooth workflow and compatibility with Semantic Release.","source":"@site/docs/localDevelopmentGuide/namingConvention.mdx","sourceDirName":"localDevelopmentGuide","slug":"/localDevelopmentGuide/namingConvention","permalink":"/docs/localDevelopmentGuide/namingConvention","draft":false,"unlisted":false,"editUrl":"https://github.com/TinhHoaSolutions-EzHR/chatbot/tree/main/docs/docs/localDevelopmentGuide/namingConvention.mdx","tags":[],"version":"current","frontMatter":{"title":"Naming Conventions","description":"A well-defined Git naming convention enhances collaboration, supports automated versioning, and simplifies project maintenance. This document outlines recommended naming conventions for branches, commits, and tags to facilitate a smooth workflow and compatibility with Semantic Release."},"sidebar":"localDevelopmentGuideSidebar","previous":{"title":"Architecture","permalink":"/docs/localDevelopmentGuide/highLevelArchitecture"},"next":{"title":"Roadmap","permalink":"/docs/localDevelopmentGuide/roadmap"}}');var r=s(74848),t=s(28453);const l=s.p+"assets/images/semantic-release-40648190c27a5c6d16bd4a45cdb2c1d7.jpg",o=s.p+"assets/images/git-naming-convention-b2ac1a21cc53f7e4cfde8bafab966fe4.png",c={title:"Naming Conventions",description:"A well-defined Git naming convention enhances collaboration, supports automated versioning, and simplifies project maintenance. This document outlines recommended naming conventions for branches, commits, and tags to facilitate a smooth workflow and compatibility with Semantic Release."},a="Git Naming Convention Guide",d={},h=[{value:"0. Scopes",id:"0-scopes",level:2},{value:"Backend Scopes (Python, FastAPI)",id:"backend-scopes-python-fastapi",level:2},{value:"Frontend Scopes (JavaScript, Next.js)",id:"frontend-scopes-javascript-nextjs",level:2},{value:"Full-Stack or Shared Scopes",id:"full-stack-or-shared-scopes",level:2},{value:"1. Branch Naming Conventions",id:"1-branch-naming-conventions",level:2},{value:"Primary Branches (Default Branches)",id:"primary-branches-default-branches",level:3},{value:"Feature Branches",id:"feature-branches",level:3},{value:"Hotfix and Bugfix Branches",id:"hotfix-and-bugfix-branches",level:3},{value:"Hotfix Branches",id:"hotfix-branches",level:4},{value:"Bugfix Branches",id:"bugfix-branches",level:4},{value:"2. Commit Message Conventions",id:"2-commit-message-conventions",level:2},{value:"Commit Message Structure",id:"commit-message-structure",level:3},{value:"Semantic Commit Types",id:"semantic-commit-types",level:3},{value:"Best Practices for Commit Messages",id:"best-practices-for-commit-messages",level:3},{value:"3. Tag Naming Conventions",id:"3-tag-naming-conventions",level:2},{value:"Release Tags",id:"release-tags",level:3}];function x(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"git-naming-convention-guide",children:"Git Naming Convention Guide"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["A well-defined Git naming convention enhances collaboration, supports automated versioning, and simplifies project maintenance. This document outlines recommended naming conventions for branches, commits, and tags to facilitate a smooth workflow and compatibility with ",(0,r.jsx)(n.strong,{children:"Semantic Release"}),"."]}),"\n","\n",(0,r.jsx)("img",{src:l,alt:"Commit Conventions"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"0-scopes",children:"0. Scopes"}),"\n",(0,r.jsx)(n.h2,{id:"backend-scopes-python-fastapi",children:"Backend Scopes (Python, FastAPI)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"api"}),": General API-related changes, such as routes or request handling.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"fix(api): correct token validation issue"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"auth"}),": Authentication and authorization logic.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"feat(auth): add OAuth2 support"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"llm"}),": LLM-specific logic, including model loading and response generation.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"perf(llm): optimize LLM response caching"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"database"}),": Database models, migrations, or queries.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"fix(database): correct migration script for user model"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"schemas"}),": Pydantic or data validation schemas.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"refactor(schemas): update response schema for LLM results"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"middleware"}),": FastAPI middleware (e.g., CORS, logging).","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"chore(middleware): add logging middleware for request tracing"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"background"}),": Background tasks or scheduled jobs.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"feat(background): add scheduled job to refresh model"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"config"}),": Configuration files or environment variable updates.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"chore(config): add env variable for LLM model path"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"testing"}),": Unit and integration tests for backend logic.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"test(testing): add tests for LLM response accuracy"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"deps"}),": Dependency updates or additions.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"chore(deps): upgrade FastAPI to latest version"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"frontend-scopes-javascript-nextjs",children:"Frontend Scopes (JavaScript, Next.js)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ui"}),": General UI/UX changes, layout adjustments, and styling.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"style(ui): improve layout for model response view"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"auth"}),": Frontend authentication handling, including login and token management.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"feat(auth): add persistent session handling"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"api"}),": Frontend API calls or data fetching logic.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"refactor(api): update request headers for secured endpoint"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"llm-display"}),": UI components specifically for displaying LLM responses.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"feat(llm-display): add loading spinner for LLM responses"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"forms"}),": Form components for user inputs, especially related to LLM queries.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"fix(forms): correct validation error messages"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"state"}),": Application state management (e.g., Redux, context API).","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"chore(state): add state management for user settings"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"config"}),": Frontend configuration, environment variables, or Next.js settings.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"chore(config): add environment variable for API base URL"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"deps"}),": Frontend dependencies and package management.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"chore(deps): update Next.js to latest version"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"i18n"}),": Localization and language support.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"feat(i18n): add support for Spanish language"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"testing"}),": Unit or end-to-end tests for frontend components.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"test(testing): add Jest tests for LLM response UI"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"seo"}),": SEO-related adjustments (e.g., meta tags, titles).","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"chore(seo): update meta description for homepage"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"full-stack-or-shared-scopes",children:"Full-Stack or Shared Scopes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"docker"}),": Docker configuration and setup.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"chore(docker): optimize Dockerfile for smaller image size"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"docs"}),": Documentation changes for both backend and frontend.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"docs(docs): update README with API usage examples"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"env"}),": Environment variables or configuration shared between backend and frontend.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"chore(env): add new environment variable for model type"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"build"}),": Build scripts or deployment configurations.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"chore(build): optimize build for production deployment"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ci"}),": Continuous Integration setup or updates.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"chore(ci): add automated test for LLM endpoint responses"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"1-branch-naming-conventions",children:"1. Branch Naming Conventions"}),"\n",(0,r.jsx)(n.p,{children:"Branch naming conventions help distinguish between different types of work and keep the Git repository organized. Each branch name should reflect its purpose and scope, using a clear and consistent naming pattern."}),"\n",(0,r.jsx)(n.h3,{id:"primary-branches-default-branches",children:"Primary Branches (Default Branches)"}),"\n",(0,r.jsx)(n.p,{children:"Primary branches represent key stages of the project lifecycle:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"main"}),": The main branch contains the latest stable production-ready code."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"feature-branches",children:"Feature Branches"}),"\n",(0,r.jsx)(n.p,{children:"Feature branches are used to work on new features or enhancements in isolation from the main codebase."}),"\n",(0,r.jsxs)(n.p,{children:["Pattern: ",(0,r.jsx)(n.code,{children:"feat/{issue-id}/{short-description}"})]}),"\n",(0,r.jsx)(n.p,{children:"Examples:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"feat/102/add-user-authentication"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"feat/145/improve-dashboard-ui"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Guidelines:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Issue ID"}),": Include the issue or task ID if using a tracking tool like Jira or GitHub Issues."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Short Description"}),": Use a concise description in kebab-case (lowercase, separated by hyphens) to describe the purpose of the feature."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"hotfix-and-bugfix-branches",children:"Hotfix and Bugfix Branches"}),"\n",(0,r.jsx)(n.p,{children:"Hotfix and bugfix branches are used to address issues either in production or development environments."}),"\n",(0,r.jsx)(n.h4,{id:"hotfix-branches",children:"Hotfix Branches"}),"\n",(0,r.jsxs)(n.p,{children:["Pattern: ",(0,r.jsx)(n.code,{children:"hotfix/{short-description}"})]}),"\n",(0,r.jsx)(n.p,{children:"Examples:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"hotfix/fix-critical-auth-bug"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"hotfix/remove-duplicate-entries"})}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"bugfix-branches",children:"Bugfix Branches"}),"\n",(0,r.jsxs)(n.p,{children:["Pattern: ",(0,r.jsx)(n.code,{children:"bugfix/{issue-id}/{short-description}"})]}),"\n",(0,r.jsx)(n.p,{children:"Examples:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"bugfix/203-correct-profile-picture-upload"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"bugfix/207-fix-login-loop-error"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"2-commit-message-conventions",children:"2. Commit Message Conventions"}),"\n",(0,r.jsx)(n.p,{children:"Using semantic and structured commit messages ensures readability, consistency, and compatibility with Semantic Release tools, enabling automated versioning."}),"\n","\n",(0,r.jsx)("img",{src:o,alt:"Commit Conventions"}),"\n",(0,r.jsx)(n.h3,{id:"commit-message-structure",children:"Commit Message Structure"}),"\n",(0,r.jsx)(n.p,{children:"A standard commit message follows this format:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"<type>(<scope>): <subject>\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"type"}),": Specifies the type of change (e.g., feat, fix) to indicate its impact on the code."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"scope"}),": Indicates the module or area affected (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"subject"}),": A brief, imperative description of the change."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"semantic-commit-types",children:"Semantic Commit Types"}),"\n",(0,r.jsx)(n.p,{children:"The following commit types align with Semantic Versioning, automatically updating version numbers based on the types of changes introduced."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"feat"}),": A new feature (increases the MINOR version)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"fix"}),": A bug fix (increases the PATCH version)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"docs"}),": Documentation changes only."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"style"}),": Changes in code formatting, not affecting code behavior."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"refactor"}),": Refactoring code without affecting functionality."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"test"}),": Adding or modifying tests."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"perf"}),": Code changes that improve performance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"chore"}),": Routine tasks, maintenance, or build changes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"build"}),": Changes affecting the build system or dependencies."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"best-practices-for-commit-messages",children:"Best Practices for Commit Messages"}),"\n",(0,r.jsx)(n.p,{children:"Examples:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"feat(auth): add OAuth2 support for social login\nfix(ui): correct layout issue on mobile navbar\ndocs(readme): update installation instructions\n"})}),"\n",(0,r.jsx)(n.p,{children:"Guidelines:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use the imperative form: (e.g., \u201cfix,\u201d not \u201cfixed\u201d)."}),"\n",(0,r.jsx)(n.li,{children:"Keep subjects concise (50 characters or less)."}),"\n",(0,r.jsx)(n.li,{children:"Add a body section if further explanation is needed, separated by a blank line after the subject line."}),"\n",(0,r.jsx)(n.li,{children:"Avoid WIP (Work In Progress) commits in the main branches."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"3-tag-naming-conventions",children:"3. Tag Naming Conventions"}),"\n",(0,r.jsx)(n.p,{children:"Tags mark specific points in the project\u2019s history, typically used for release versions. Follow Semantic Versioning format for tagging releases."}),"\n",(0,r.jsx)(n.h3,{id:"release-tags",children:"Release Tags"}),"\n",(0,r.jsx)(n.p,{children:"Semantic Release relies on tags for versioning. Tags should be consistent, indicating the major, minor, and patch levels as vMAJOR.MINOR.PATCH."}),"\n",(0,r.jsxs)(n.p,{children:["Pattern: ",(0,r.jsx)(n.code,{children:"v<MAJOR>.<MINOR>.<PATCH>"})]}),"\n",(0,r.jsx)(n.p,{children:"Examples:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"v1.0.0\nv1.2.1\nv2.0.0-alpha\n"})}),"\n",(0,r.jsx)(n.p,{children:"Notes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Pre-release tags: Use pre-release identifiers (e.g., alpha, beta) for early versions (e.g., v1.0.0-alpha)."}),"\n",(0,r.jsx)(n.li,{children:"Automated Tagging: When using Semantic Release, tags are automatically generated based on commit messages, ensuring consistent versioning."}),"\n"]})]})}function j(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}}}]);