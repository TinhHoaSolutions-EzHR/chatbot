# TODO: setup qdrant (index), and redis (cache)
services:
  database:
    image: mcr.microsoft.com/mssql/server:2019-CU29-GDR1-ubuntu-20.04
    container_name: database
    user: root
    ports:
      - "1433:1433"
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
      MSSQL_USER: "SA"
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
    # restart: always
    volumes:
      - mssql-data:/var/opt/mssql/data
      - mssql-log:/var/opt/mssql/log
      - mssql-backup:/var/opt/mssql/backup
    networks:
      - backend
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "$$MSSQL_SA_PASSWORD" -Q "SELECT 1;" || exit
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s

  api_server:
    build:
      context: ../../chatbot-core/backend/
      dockerfile: Dockerfile
    container_name: api_server
    hostname: api_server
    depends_on:
      - database
    command:
      ["uv", "run", "fastapi", "dev", "--host", "0.0.0.0", "--port", "5000"]
    ports:
      - "5000:5000"
    env_file:
      - ../../chatbot-core/.env
    volumes: # INFO: Mount for auto-reload code changes
      - ../../chatbot-core/backend/app:/app/app
      - ../../chatbot-core/backend/tests:/app/tests
    networks:
      - backend

volumes:
  mssql-data:
  mssql-log:
  mssql-backup:

networks:
  backend:
    driver: bridge
