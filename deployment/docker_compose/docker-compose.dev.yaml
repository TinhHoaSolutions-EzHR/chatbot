services:
  database:
    image: mcr.microsoft.com/mssql/server:2019-CU29-GDR1-ubuntu-20.04
    container_name: database
    user: root
    restart: always
    ports:
      - "1433:1433"
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
      MSSQL_USER: "SA"
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
    volumes:
      - mssql_data_volume:/var/opt/mssql/data
      - mssql_log_volume:/var/opt/mssql/log
      - mssql_backup_volume:/var/opt/mssql/backup
    networks:
      - backend
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "$$MSSQL_SA_PASSWORD" -Q "SELECT 1;" || exit
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s


  # NOTE: Official port for api_server is 5000
  api_server:
    build:
      context: ../../chatbot-core/backend/
      dockerfile: Dockerfile
    container_name: api_server
    hostname: api_server
    restart: on-failure
    depends_on:
      - database
    command:
      # [ "/app/.venv/bin/fastapi", "run", "app/main.py", "--host", "0.0.0.0", "--port", "5000" ]
      ["uv", "run", "fastapi", "dev", "--host", "0.0.0.0", "--port", "5000"]
    ports:
      - "5000:5000"
    env_file:
      - ../../chatbot-core/.env
    volumes: # INFO: Mount for auto-reload code changes
      - ../../chatbot-core/backend/app:/app/app
      - ../../chatbot-core/backend/tests:/app/tests
    networks:
      - backend
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"

volumes:
  mssql_data_volume:
  mssql_log_volume:
  mssql_backup_volume:

networks:
  backend:
    driver: bridge
